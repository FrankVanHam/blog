##
## File            : $File$
## SCM             : $URL$
##
## Copyright       : Realworld Systems
##                   e-mail  : support@realworld-systems.com
##                   address : Venusstraat 17, 4105 JH Culemborg, The Netherlands
##                   tel     : +31(0)345 614406
##                   fax     : +31(0)345 614319
##
## Contains        : 
##
##
## Date written    : 2014-09-04
## Date changed    : $Date$
## Revision        : $Rev$

_package user
$

_pragma(classify_level=basic, topic={demo})
def_slotted_exemplar(
	:supply_point_explorer_plugin,
	{},
	:explorer_rwo_set_output_view )
$


_pragma(classify_level=basic, topic={demo})
_method supply_point_explorer_plugin.build_gui(p_container)
	_local top_rc << rowcol.new(p_container, _unset, 1, _unset,
				   :style, :top_level)
	
	_local dialog << supply_point_info_model.new(_self)
	_local gui << dialog.build_embedded_gui(top_rc)
	gui.tab_label << dialog.title
	
	_self.cache_dialog(:the_dialog, dialog)
	
	_super.build_gui(top_rc)
	
	_return top_rc
_endmethod
$


_pragma(classify_level=advanced, usage={subclassable})
_method supply_point_explorer_plugin.view_output_type
    >> :supply_point_output_view
_endmethod
$


_pragma(classify_level=advanced, usage={subclassable})
_method supply_point_explorer_plugin.can_handle_selection?(selection)
    ##
    ## Return true, true when this is a hotel collection
    ## Return true, false when this is any other collection
    ##
    _if selection.is_collection? _orif selection.is_records?
    _then
        _local my_rwos << _self.application.database.rwo_set()
        _local target_collection << my_rwos.select(:collection, {:supply_point} )
        _if selection.a_collection() _is target_collection
        _then
            _return _true, _true
        _endif
    _endif
    >> _false, _false
_endmethod
$


_pragma(classify_level=restricted)
_method supply_point_explorer_plugin.select_rwos( selection, by_user? )
	## Callback method for selection of RWOs in the tree item
	_local sp << _unset 
	_if by_user?
	_then
		_local selected_records << .rwo_set_item.selected_records
		_if selected_records.size _is 1
		_then
			sp << selected_records.an_element()
		_endif
	_endif
	_local dialog << _self.get_dialog(:the_dialog)
	_if dialog _isnt _unset
	_then 
		dialog.select(sp)
	_endif
	
	# Get default behaviour as well
	_super.select_rwos( selection, by_user? )
_endmethod
$


_pragma(classify_level=restricted)
_method supply_point_explorer_plugin.highlight(p_geom_set)
	_if p_geom_set.empty? _then _return _endif
	
	_self.application.databus.make_data_available( :geometry_to_highlight,
						       p_geom_set )
_endmethod
$

