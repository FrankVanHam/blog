##
## File            : $File$
## SCM             : $URL$
##
## Copyright       : Realworld Systems
##                   e-mail  : support@realworld-systems.com
##                   address : Venusstraat 17, 4105 JH Culemborg, The Netherlands
##                   tel     : +31(0)345 614406
##                   fax     : +31(0)345 614319
##
## Contains        : 
##
##
## Date written    : 2014-10-05
## Date changed    : $Date$
## Revision        : $Rev$

_package user
$

_pragma(classify_level=basic, topic={demo})
def_slotted_exemplar(:cim_renderer, {})
$

_pragma(classify_level=basic, topic={demo})
## Style to colour the nearest cable.
cim_renderer.define_shared_constant(:yellow_style,
	line_style.new_with_properties(:foreground_colour, colour.called(:yellow),
				       :width, 10),
	:private)
$

_pragma(classify_level=basic, topic={demo})
## Style to colour the dragging cable.
cim_renderer.define_shared_constant(:blue_style,
	line_style.new_with_properties(:foreground_colour, colour.called(:blue),
				       :width, 2),
				       :private)
$	


_pragma(classify_level=basic, topic={demo})
_method cim_renderer.new()
	_return _clone 
_endmethod
$

_pragma(classify_level=basic, topic={demo})
_method cim_renderer.xor_cable(a_window, cable_sectors)
	## Shows a fat yellow line over the cable to indicate that that
	## is the nearest one right now.
	a_window.xor_sector_rope_transform(_self.yellow_style, cable_sectors)
_endmethod
$

_pragma(classify_level=basic, topic={demo})
_method cim_renderer.xor_drag_sectors(a_window, drag_sectors)
	## Show the cable during dragging.
	a_window.xor_sector_rope_transform(_self.yellow_style, drag_sectors)
	a_window.xor_sector_rope_transform(_self.blue_style, drag_sectors)

	_self.xor_drag_circle(a_window, drag_sectors.first_coord)
	_self.xor_drag_circle(a_window, drag_sectors.last_coord)
_endmethod
$

_pragma(classify_level=basic, topic={demo})
_private _method cim_renderer.xor_drag_circle(a_window, p_coord)
	 _local c << circle.new(p_coord, 750)
	a_window.xor_sector_rope_transform(_self.blue_style, c.sectors)
_endmethod
$
