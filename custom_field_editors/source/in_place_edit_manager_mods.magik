##
## File            : $File$
## SCM             : $URL$
##
## Copyright       : Realworld Systems
##                   e-mail  : support@realworld-systems.com
##                   address : Venusstraat 17, 4105 JH Culemborg, The Netherlands
##                   tel     : +31(0)345 614406
##                   fax     : +31(0)345 614319
##
## Contains        : Changes to the edit_manager so it will
##                   understand how to handle toggle_controls.
##
##
## Date written    : 2014-09-19
## Date changed    : $Date$
## Revision        : $Rev$

_package sw
$



_pragma(classify_level=restricted)
_method in_place_edit_manager.int!required_width_for(p_control)
	##
	## P_CONTROL: A control that is managed by _self, and for which
	## we want to know some dimensional properties.
	## 
	## Returns:
	## 1. The minimum width for the P_CONTROL
	## 2. A boolean indicating whether P_CONTROL can take up
	##    more space 
	## 3. Whether some space is required around P_CONTROL
	##    for optical improvement
	## 
	>> _if _self.int!is_button_item?(p_control)
	   _then
		   >> (p_control.width, _false, _false)
	   _elif _self.int!is_text_item?(p_control)
	   _then
		   _self.int!set_text_item_props(p_control)
		   >> (p_control.min_width.default(10), _true, _true)
	   _elif _self.int!is_image_item?(p_control)
	   _then
		   >> (p_control.width, _false, _true)

		#
		# Start change
	   _elif _self.int!is_toggle_item?(p_control)
	   _then
		   >> (p_control.width, _false, _true)

		   # end change
		   #
	   _elif (p_control _is :fill)
	   _then
		   >> (0, _true, _false)
	   _else
		   condition.raise(:error, :string, "Unexpected control type in in_place_edit_manager.int!required_width_for()")
	   _endif
_endmethod
$


_pragma(classify_level=restricted)
_private _method in_place_edit_manager.int!is_toggle_item?(p_control)
	## 
	## Returns _true if P_CONTROL is a togle_item subclass, or a
	## class that behaves similarly regarding edit properties
	## (resizing, font, etc.);
	## _false otherwise.
	##
	>> p_control.is_class_of?(toggle_item) _orif
	   p_control.is_class_of?(image_toggle_item)
_endmethod
$
